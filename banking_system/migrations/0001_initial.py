# Generated by Django 5.2.4 on 2025-09-10 09:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('minimum_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('monthly_maintenance_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('interest_rate', models.DecimalField(decimal_places=4, default=Decimal('0.00'), max_digits=5)),
                ('withdrawal_limit_daily', models.DecimalField(decimal_places=2, default=Decimal('100000.00'), max_digits=15)),
                ('withdrawal_limit_monthly', models.DecimalField(decimal_places=2, default=Decimal('1000000.00'), max_digits=15)),
                ('requires_maintaining_balance', models.BooleanField(default=True)),
                ('allows_overdraft', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BillPaymentService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('category', models.CharField(max_length=50)),
                ('fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('atm_withdrawal_on_us', 'ATM Withdrawal (On-Us)'), ('atm_withdrawal_off_us', 'ATM Withdrawal (Off-Us)'), ('balance_inquiry_atm', 'Balance Inquiry (ATM)'), ('mobile_transfer_own', 'Mobile Transfer (Own Account)'), ('mobile_transfer_other', 'Mobile Transfer (Other Bank)'), ('agent_deposit', 'Agent Deposit'), ('agent_withdrawal', 'Agent Withdrawal'), ('card_issuance', 'Card Issuance'), ('card_replacement', 'Card Replacement'), ('statement_request', 'Statement Request'), ('checkbook_request', 'Checkbook Request'), ('loan_processing', 'Loan Processing'), ('account_maintenance', 'Account Maintenance')], max_length=30, unique=True)),
                ('fixed_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('percentage_fee', models.DecimalField(decimal_places=4, default=Decimal('0.00'), max_digits=5)),
                ('minimum_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('maximum_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vat_applicable', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_from', models.DateTimeField()),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoanType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField()),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('min_tenure_months', models.IntegerField()),
                ('max_tenure_months', models.IntegerField()),
                ('interest_rate', models.DecimalField(decimal_places=4, max_digits=5)),
                ('processing_fee_percentage', models.DecimalField(decimal_places=4, default=Decimal('2.00'), max_digits=5)),
                ('requires_guarantor', models.BooleanField(default=False)),
                ('requires_collateral', models.BooleanField(default=False)),
                ('min_income_requirement', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('is_instant', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('customer', 'Customer'), ('agent', 'Bank Agent'), ('staff', 'Bank Staff'), ('admin', 'Administrator')], default='customer', max_length=10)),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', message='Enter a valid phone number')])),
                ('national_id', models.CharField(max_length=20, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=10)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('employer', models.CharField(blank=True, max_length=200)),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('kyc_status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('is_active_customer', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('view', 'View'), ('approve', 'Approve'), ('reject', 'Reject'), ('block', 'Block'), ('unblock', 'Unblock')], max_length=15)),
                ('model_name', models.CharField(max_length=100)),
                ('object_id', models.CharField(max_length=100)),
                ('object_repr', models.CharField(max_length=200)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_code', models.CharField(max_length=15, unique=True)),
                ('business_name', models.CharField(max_length=200)),
                ('business_address', models.TextField()),
                ('business_phone', models.CharField(max_length=15)),
                ('license_number', models.CharField(max_length=50)),
                ('daily_limit', models.DecimalField(decimal_places=2, default=Decimal('500000.00'), max_digits=15)),
                ('monthly_limit', models.DecimalField(decimal_places=2, default=Decimal('10000000.00'), max_digits=15)),
                ('current_daily_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('current_monthly_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('available_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('status', models.CharField(choices=[('active', 'Active'), ('dormant', 'Dormant'), ('frozen', 'Frozen'), ('closed', 'Closed')], default='active', max_length=10)),
                ('pin_hash', models.CharField(blank=True, max_length=255)),
                ('is_primary', models.BooleanField(default=False)),
                ('overdraft_limit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('last_transaction_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking_system.accounttype')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL)),
                ('created_by_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='banking_system.bankagent')),
            ],
        ),
        migrations.CreateModel(
            name='ATMCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(editable=False, max_length=16, unique=True)),
                ('cardholder_name', models.CharField(max_length=200)),
                ('card_type', models.CharField(choices=[('debit', 'Debit Card'), ('prepaid', 'Prepaid Card')], default='debit', max_length=10)),
                ('cvv', models.CharField(editable=False, max_length=3)),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('blocked', 'Blocked'), ('expired', 'Expired'), ('damaged', 'Damaged'), ('cancelled', 'Cancelled')], default='active', max_length=10)),
                ('daily_withdrawal_limit', models.DecimalField(decimal_places=2, default=Decimal('40000.00'), max_digits=15)),
                ('daily_purchase_limit', models.DecimalField(decimal_places=2, default=Decimal('200000.00'), max_digits=15)),
                ('pin_tries_count', models.IntegerField(default=0)),
                ('is_pin_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='atm_card', to='banking_system.bankaccount')),
                ('issued_by_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='banking_system.bankagent')),
            ],
        ),
        migrations.CreateModel(
            name='AgentTransactionLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('single_deposit_limit', models.DecimalField(decimal_places=2, default=Decimal('300000.00'), max_digits=15)),
                ('single_withdrawal_limit', models.DecimalField(decimal_places=2, default=Decimal('70000.00'), max_digits=15)),
                ('daily_transaction_limit', models.DecimalField(decimal_places=2, default=Decimal('500000.00'), max_digits=15)),
                ('monthly_transaction_limit', models.DecimalField(decimal_places=2, default=Decimal('10000000.00'), max_digits=15)),
                ('current_daily_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('current_monthly_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('last_reset_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_limits', to='banking_system.bankagent')),
            ],
        ),
        migrations.CreateModel(
            name='BillPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(editable=False, max_length=30, unique=True)),
                ('account_number', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('reference_number', models.CharField(blank=True, max_length=50)),
                ('receipt_number', models.CharField(blank=True, max_length=50)),
                ('channel', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bill_payments', to='banking_system.bankaccount')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking_system.billpaymentservice')),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('branch_code', models.CharField(max_length=10, unique=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('opening_time', models.TimeField(default='08:00:00')),
                ('closing_time', models.TimeField(default='17:00:00')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_branches', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bankagent',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='banking_system.branch'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking_system.branch'),
        ),
        migrations.CreateModel(
            name='ATMMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atm_id', models.CharField(max_length=20, unique=True)),
                ('location_name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('maintenance', 'Under Maintenance'), ('out_of_cash', 'Out of Cash')], default='online', max_length=15)),
                ('cash_available', models.DecimalField(decimal_places=2, default=Decimal('2000000.00'), max_digits=15)),
                ('max_cash_capacity', models.DecimalField(decimal_places=2, default=Decimal('5000000.00'), max_digits=15)),
                ('daily_withdrawal_limit', models.DecimalField(decimal_places=2, default=Decimal('40000.00'), max_digits=15)),
                ('single_withdrawal_limit', models.DecimalField(decimal_places=2, default=Decimal('20000.00'), max_digits=15)),
                ('supports_deposit', models.BooleanField(default=False)),
                ('supports_cardless', models.BooleanField(default=True)),
                ('last_maintenance', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atms', to='banking_system.branch')),
            ],
        ),
        migrations.CreateModel(
            name='CardlessWithdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('withdrawal_code', models.CharField(editable=False, max_length=10, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('recipient_phone', models.CharField(max_length=15)),
                ('recipient_name', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('used', 'Used'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('expires_at', models.DateTimeField()),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cardless_withdrawals', to='banking_system.bankaccount')),
                ('atm_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='banking_system.atmmachine')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=255, unique=True)),
                ('device_name', models.CharField(max_length=100)),
                ('device_type', models.CharField(max_length=50)),
                ('device_model', models.CharField(blank=True, max_length=100)),
                ('os_version', models.CharField(blank=True, max_length=50)),
                ('app_version', models.CharField(blank=True, max_length=20)),
                ('is_trusted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('registration_ip', models.GenericIPAddressField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForexRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_currency', models.CharField(default='KES', max_length=3)),
                ('target_currency', models.CharField(max_length=3)),
                ('buy_rate', models.DecimalField(decimal_places=6, max_digits=10)),
                ('sell_rate', models.DecimalField(decimal_places=6, max_digits=10)),
                ('mid_rate', models.DecimalField(decimal_places=6, max_digits=10)),
                ('effective_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('base_currency', 'target_currency', 'effective_date')},
            },
        ),
        migrations.CreateModel(
            name='KYCDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('national_id', 'National ID'), ('passport', 'Passport'), ('driving_license', 'Driving License'), ('utility_bill', 'Utility Bill'), ('bank_statement', 'Bank Statement'), ('payslip', 'Payslip'), ('business_permit', 'Business Permit'), ('tax_certificate', 'Tax Certificate')], max_length=20)),
                ('document_file', models.FileField(upload_to='kyc_documents/')),
                ('document_number', models.CharField(blank=True, max_length=50)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=15)),
                ('rejection_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kyc_documents', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.CharField(editable=False, max_length=30, unique=True)),
                ('requested_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('approved_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('tenure_months', models.IntegerField()),
                ('purpose', models.TextField()),
                ('monthly_income', models.DecimalField(decimal_places=2, max_digits=15)),
                ('employment_details', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('credit_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(300), django.core.validators.MaxValueValidator(850)])),
                ('risk_rating', models.CharField(blank=True, max_length=10)),
                ('rejection_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking_system.bankaccount')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loan_applications', to=settings.AUTH_USER_MODEL)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_loans', to=settings.AUTH_USER_MODEL)),
                ('loan_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking_system.loantype')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_number', models.CharField(editable=False, max_length=30, unique=True)),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('interest_rate', models.DecimalField(decimal_places=4, max_digits=5)),
                ('tenure_months', models.IntegerField()),
                ('monthly_installment', models.DecimalField(decimal_places=2, max_digits=15)),
                ('outstanding_principal', models.DecimalField(decimal_places=2, max_digits=15)),
                ('outstanding_interest', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('disbursement_date', models.DateTimeField()),
                ('first_payment_date', models.DateField()),
                ('maturity_date', models.DateField()),
                ('last_payment_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paid_off', 'Paid Off'), ('defaulted', 'Defaulted'), ('written_off', 'Written Off')], default='active', max_length=15)),
                ('days_in_arrears', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking_system.bankaccount')),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to=settings.AUTH_USER_MODEL)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loan', to='banking_system.loanapplication')),
                ('loan_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking_system.loantype')),
            ],
        ),
        migrations.CreateModel(
            name='LoanPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(editable=False, max_length=30, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('interest_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('penalty_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('payment_date', models.DateTimeField()),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('reversed', 'Reversed')], default='pending', max_length=15)),
                ('payment_channel', models.CharField(blank=True, max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='banking_system.loan')),
            ],
        ),
        migrations.CreateModel(
            name='MobileBankingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('channel', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login_success', 'Successful Login'), ('login_failed', 'Failed Login'), ('password_change', 'Password Changed'), ('pin_change', 'PIN Changed'), ('card_blocked', 'Card Blocked'), ('account_locked', 'Account Locked'), ('suspicious_transaction', 'Suspicious Transaction'), ('fraud_detected', 'Fraud Detected')], max_length=25)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('device_info', models.TextField(blank=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_security_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StandingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(editable=False, max_length=30, unique=True)),
                ('beneficiary_account_number', models.CharField(max_length=20)),
                ('beneficiary_name', models.CharField(max_length=200)),
                ('beneficiary_bank', models.CharField(blank=True, max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], max_length=15)),
                ('reference', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('next_execution_date', models.DateField()),
                ('last_execution_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='active', max_length=15)),
                ('execution_count', models.IntegerField(default=0)),
                ('failed_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standing_orders', to='banking_system.bankaccount')),
            ],
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('category', models.CharField(choices=[('account', 'Account Issues'), ('card', 'Card Issues'), ('transaction', 'Transaction Issues'), ('loan', 'Loan Issues'), ('technical', 'Technical Issues'), ('general', 'General Inquiry'), ('complaint', 'Complaint')], max_length=15)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='open', max_length=15)),
                ('resolution', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('config_type', models.CharField(choices=[('general', 'General'), ('transaction', 'Transaction'), ('security', 'Security'), ('notification', 'Notification'), ('fee', 'Fee'), ('limit', 'Limit')], default='general', max_length=15)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(editable=False, max_length=30, unique=True)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('bill_payment', 'Bill Payment'), ('airtime_purchase', 'Airtime Purchase'), ('loan_disbursement', 'Loan Disbursement'), ('loan_repayment', 'Loan Repayment'), ('fee_charge', 'Fee Charge'), ('interest_credit', 'Interest Credit'), ('reversal', 'Reversal')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=15)),
                ('channel', models.CharField(choices=[('atm', 'ATM'), ('mobile', 'Mobile Banking'), ('internet', 'Internet Banking'), ('ussd', 'USSD'), ('agent', 'Agent Banking'), ('branch', 'Branch'), ('pos', 'Point of Sale')], max_length=10)),
                ('reference_number', models.CharField(blank=True, max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('reversed', 'Reversed')], default='pending', max_length=15)),
                ('beneficiary_name', models.CharField(blank=True, max_length=200)),
                ('beneficiary_bank', models.CharField(blank=True, max_length=200)),
                ('device_info', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='banking_system.bankaccount')),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='banking_system.bankagent')),
                ('atm_machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='banking_system.atmmachine')),
                ('beneficiary_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_transactions', to='banking_system.bankaccount')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='banking_system.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('transaction', 'Transaction Alert'), ('account', 'Account Alert'), ('loan', 'Loan Alert'), ('card', 'Card Alert'), ('security', 'Security Alert'), ('promotional', 'Promotional'), ('system', 'System Notification')], max_length=15)),
                ('channel', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('push', 'Push Notification'), ('in_app', 'In-App')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='banking_system.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='InterestCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calculation_date', models.DateField()),
                ('balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('interest_rate', models.DecimalField(decimal_places=4, max_digits=5)),
                ('interest_earned', models.DecimalField(decimal_places=2, max_digits=15)),
                ('days_calculated', models.IntegerField()),
                ('is_credited', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interest_calculations', to='banking_system.bankaccount')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='banking_system.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='UserTransactionLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_transfer_limit', models.DecimalField(decimal_places=2, default=Decimal('1000000.00'), max_digits=15)),
                ('daily_withdrawal_limit', models.DecimalField(decimal_places=2, default=Decimal('100000.00'), max_digits=15)),
                ('monthly_transfer_limit', models.DecimalField(decimal_places=2, default=Decimal('5000000.00'), max_digits=15)),
                ('single_transaction_limit', models.DecimalField(decimal_places=2, default=Decimal('500000.00'), max_digits=15)),
                ('current_daily_transfers', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('current_daily_withdrawals', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('current_monthly_transfers', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('last_reset_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_limits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement_date', models.DateField()),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('opening_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('closing_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_credits', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_debits', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('statement_file', models.FileField(blank=True, upload_to='statements/')),
                ('is_generated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='banking_system.bankaccount')),
            ],
            options={
                'unique_together': {('account', 'from_date', 'to_date')},
            },
        ),
    ]
